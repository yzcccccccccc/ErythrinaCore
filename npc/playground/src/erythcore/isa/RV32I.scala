package erythcore

import chisel3._
import chisel3.util._

object RV32I_I extends InstrType{
  def LB    = BitPat("b???????_?????_?????_000_?????_00000_11")
  def LH    = BitPat("b???????_?????_?????_001_?????_00000_11")
  def LW    = BitPat("b???????_?????_?????_010_?????_00000_11")
  def LBU   = BitPat("b???????_?????_?????_100_?????_00000_11")
  def LHU   = BitPat("b???????_?????_?????_101_?????_00000_11")
  def ADDI  = BitPat("b???????_?????_?????_000_?????_00100_11")
  def SLTI  = BitPat("b???????_?????_?????_010_?????_00100_11")
  def SLTIU = BitPat("b???????_?????_?????_011_?????_00100_11")
  def XORI  = BitPat("b???????_?????_?????_100_?????_00100_11")
  def ORI   = BitPat("b???????_?????_?????_110_?????_00100_11")
  def ANDI  = BitPat("b???????_?????_?????_111_?????_00100_11")
  def SLLI  = BitPat("b0000000_?????_?????_001_?????_00100_11")
  def SRLI  = BitPat("b0000000_?????_?????_101_?????_00100_11")
  def SRAI  = BitPat("b0100000_?????_?????_101_?????_00100_11")

  val table = Array(
    LB            -> List(TypeI, ALUop.add, LSUop.lb, BPUop.nop, CSRop.nop),
    LH            -> List(TypeI, ALUop.add, LSUop.lh, BPUop.nop, CSRop.nop),
    LW            -> List(TypeI, ALUop.add, LSUop.lw, BPUop.nop, CSRop.nop),
    LBU           -> List(TypeI, ALUop.add, LSUop.lbu, BPUop.nop, CSRop.nop),
    LHU           -> List(TypeI, ALUop.add, LSUop.lhu, BPUop.nop, CSRop.nop),
    ADDI          -> List(TypeI, ALUop.add, LSUop.nop, BPUop.nop, CSRop.nop),
    SLTI          -> List(TypeI, ALUop.slt, LSUop.nop, BPUop.nop, CSRop.nop),
    SLTIU         -> List(TypeI, ALUop.sltu, LSUop.nop, BPUop.nop, CSRop.nop),
    XORI          -> List(TypeI, ALUop.xor, LSUop.nop, BPUop.nop, CSRop.nop),
    ORI           -> List(TypeI, ALUop.or, LSUop.nop, BPUop.nop, CSRop.nop),
    ANDI          -> List(TypeI, ALUop.and, LSUop.nop, BPUop.nop, CSRop.nop),
    SLLI          -> List(TypeI, ALUop.sll, LSUop.nop, BPUop.nop, CSRop.nop),
    SRLI          -> List(TypeI, ALUop.srl, LSUop.nop, BPUop.nop, CSRop.nop),
    SRAI          -> List(TypeI, ALUop.sra, LSUop.nop, BPUop.nop, CSRop.nop)
  )
}

object RV32I_U extends InstrType{
  def LUI     = BitPat("b???????_?????_?????_???_?????_01101_11")
  def AUIPC   = BitPat("b???????_?????_?????_???_?????_00101_11")

  val table = Array(
    LUI           -> List(TypeU, ALUop.dir, LSUop.nop, BPUop.nop, CSRop.nop),
    AUIPC         -> List(TypeU, ALUop.add, LSUop.nop, BPUop.nop, CSRop.nop)
  )
}

object RV32I_R extends InstrType{
  def ADD   = BitPat("b0000000_?????_?????_000_?????_01100_11")
  def SUB   = BitPat("b0100000_?????_?????_000_?????_01100_11")
  def SLL   = BitPat("b0000000_?????_?????_001_?????_01100_11")
  def SLT   = BitPat("b0000000_?????_?????_010_?????_01100_11")
  def SLTU  = BitPat("b0000000_?????_?????_011_?????_01100_11")
  def XOR   = BitPat("b0000000_?????_?????_100_?????_01100_11")
  def SRL   = BitPat("b0000000_?????_?????_101_?????_01100_11")
  def SRA   = BitPat("b0100000_?????_?????_101_?????_01100_11")
  def OR    = BitPat("b0000000_?????_?????_110_?????_01100_11")
  def AND   = BitPat("b0000000_?????_?????_111_?????_01100_11")

  val table = Array(
    ADD           -> List(TypeR, ALUop.add, LSUop.nop, BPUop.nop, CSRop.nop),
    SUB           -> List(TypeR, ALUop.sub, LSUop.nop, BPUop.nop, CSRop.nop),
    SLL           -> List(TypeR, ALUop.sll, LSUop.nop, BPUop.nop, CSRop.nop),
    SLT           -> List(TypeR, ALUop.slt, LSUop.nop, BPUop.nop, CSRop.nop),
    SLTU          -> List(TypeR, ALUop.sltu, LSUop.nop, BPUop.nop, CSRop.nop),
    XOR           -> List(TypeR, ALUop.xor, LSUop.nop, BPUop.nop, CSRop.nop),
    SRL           -> List(TypeR, ALUop.srl, LSUop.nop, BPUop.nop, CSRop.nop),
    SRA           -> List(TypeR, ALUop.sra, LSUop.nop, BPUop.nop, CSRop.nop),
    OR            -> List(TypeR, ALUop.or, LSUop.nop, BPUop.nop, CSRop.nop),
    AND           -> List(TypeR, ALUop.and, LSUop.nop, BPUop.nop, CSRop.nop)
  )
}

object RV32I_S extends InstrType{
  def SB    = BitPat("b???????_?????_?????_000_?????_01000_11")
  def SH    = BitPat("b???????_?????_?????_001_?????_01000_11")
  def SW    = BitPat("b???????_?????_?????_010_?????_01000_11")

  val table = Array(
    SB            -> List(TypeS, ALUop.add, LSUop.sb, BPUop.nop, CSRop.nop),
    SH            -> List(TypeS, ALUop.add, LSUop.sh, BPUop.nop, CSRop.nop),
    SW            -> List(TypeS, ALUop.add, LSUop.sw, BPUop.nop, CSRop.nop)
  )
}

object RV32I_J extends InstrType{
  def JAL   = BitPat("b???????_?????_?????_???_?????_11011_11")
  def JALR  = BitPat("b???????_?????_?????_000_?????_11001_11")

  val table = Array(
    JAL           -> List(TypeJ, ALUop.add, LSUop.nop, BPUop.jal, CSRop.nop),
    JALR          -> List(TypeJ, ALUop.add, LSUop.nop, BPUop.jalr, CSRop.nop)
  )
}

object RV32I_B extends InstrType{
  def BEQ   = BitPat("b???????_?????_?????_000_?????_11000_11")
  def BNE   = BitPat("b???????_?????_?????_001_?????_11000_11")
  def BLT   = BitPat("b???????_?????_?????_100_?????_11000_11")
  def BGE   = BitPat("b???????_?????_?????_101_?????_11000_11")
  def BLTU  = BitPat("b???????_?????_?????_110_?????_11000_11")
  def BGEU  = BitPat("b???????_?????_?????_111_?????_11000_11")

  val table = Array(
    BEQ           -> List(TypeB, ALUop.sub, LSUop.nop, BPUop.beq, CSRop.nop),
    BNE           -> List(TypeB, ALUop.sub, LSUop.nop, BPUop.bne, CSRop.nop),
    BLT           -> List(TypeB, ALUop.slt, LSUop.nop, BPUop.blt, CSRop.nop),
    BGE           -> List(TypeB, ALUop.slt, LSUop.nop, BPUop.bge, CSRop.nop),
    BLTU          -> List(TypeB, ALUop.sltu, LSUop.nop, BPUop.bltu, CSRop.nop),
    BGEU          -> List(TypeB, ALUop.sltu, LSUop.nop, BPUop.bgeu, CSRop.nop)
  )
}

object RV32I extends InstrType{
  val table = RV32I_J.table ++ RV32I_I.table ++ RV32I_B.table ++ RV32I_R.table ++ RV32I_S.table ++ RV32I_U.table
}